import{_ as I,b as r,c as i,d as l,e,j as m,F as k,m as V,f as n,t as u,i as c,g as _}from"./index-f248e178.js";const g={data(){return{validationErrors:"",errors:null,isSuccess:!1,isErrors:!1,payItem:{name:"",code:"",is_benefit_in_kind:"",taxable:"",pensionable:"",subject_to_national_insurance:"",payment_type:""},dropdownValues:[{name:"Gross Addition",code:"Gross Addition"},{name:"Gross Deduction",code:"Gross Deduction"},{name:"Net Addition",code:"Net Addition"},{name:"Net Deduction",code:"Net Deduction"}]}},mounted(){this.editPayItem()},methods:{validateData(){const d=["taxable","pensionable","subject_to_national_insurance","is_benefit_in_kind"];this.validationErrors=this.$validateFormData(this.payItem,d),Object.keys(this.validationErrors).length===0?this.updatePayItem():console.log("Validation errors:",this.validationErrors)},goBack(){this.$router.push({name:"company-payitems"})},async editPayItem(){const o="/edit-pay-item/"+this.$route.params.id;try{let a=await this.$axios.get(o);a=a.data,this.payItem.name=a.name,this.payItem.code=a.code,this.payItem.taxable=a.taxable==!0?["taxable"]:"",this.payItem.pensionable=a.pensionable==!0?["pensionable"]:"",this.payItem.subject_to_national_insurance=a.code==!0?["subject_to_national_insurance"]:"",this.payItem.payment_type={name:a.payment_type,code:a.payment_type}}catch(a){a.response.data.errors}},async updatePayItem(){let d=this.$route.params.id,o=this.payItem;const a="/update-pay-item/"+d;try{await this.$axios.post(a,o),this.$showToast("success","Pay Item updated successfully."),this.isErrors=!1,this.isSuccess=!0,this.goBack()}catch(y){this.errors=y.response.data.errors,this.isSuccess=!1,this.isErrors=!0}}}},w={class:"col-12 md:col-12"},E={class:"card card-w-title"},N={class:"grid"},D={class:"col-12 md:col-12"},j={key:0,class:"text-center mb-5 pt-2 pb-2",style:{"background-color":"#80D1B4","border-radius":"5px !important"}},P=e("span",{class:"text-white font-medium"},"Saved Successfully",-1),S=[P],B={key:1,class:"mb-5 py-4 pl-3",style:{"background-color":"#E88D58","border-radius":"5px !important"}},C={class:"text-white font-medium"},U=e("br",null,null,-1),O={class:"formgrid grid"},T={class:"field col-4"},A=e("label",{for:"companyName"},"Pay item name*",-1),F={key:0,class:"font-medium validation-text p-2"},G={class:"field col-4"},L={for:"companyName"},W={key:0,class:"font-medium validation-text p-2"},q={class:"grid"},z={class:"col-12 md:col-12"},H={class:"formgrid grid"},J={class:"field col-4"},K=e("label",{for:"name2"},"Payment Type*",-1),M={key:0,class:"font-medium validation-text p-2"},Q=e("p",null,"Pay items( Select all that apply )",-1),R={class:"grid"},X={class:"col-12"},Y={class:"field-checkbox mb-0"},Z=e("label",{for:"checkOption1l",class:"text-lg"},"Taxable ",-1),$={class:"col-12"},ee={class:"field-checkbox mb-0"},te=e("label",{for:"checkOption2",class:"text-lg"},"Subject to National Insurance",-1),oe={class:"col-12"},se={class:"field-checkbox mb-0"},ae=e("label",{for:"checkOption2"},"Pensionable ",-1),ne=e("br",null,null,-1);function ie(d,o,a,y,t,b){const v=r("InputText"),p=r("sapn"),f=r("Dropdown"),h=r("Checkbox"),x=r("Button");return i(),l("div",w,[e("div",E,[e("div",N,[e("div",D,[t.isSuccess?(i(),l("div",j,S)):m("",!0),t.isErrors?(i(),l("div",B,[(i(!0),l(k,null,V(t.errors,s=>(i(),l("span",C,[c(u(s)+" ",1),U]))),256))])):m("",!0),e("div",O,[e("div",T,[A,n(v,{modelValue:t.payItem.name,"onUpdate:modelValue":o[0]||(o[0]=s=>t.payItem.name=s),id:"companyName",optionLabel:"companyName",type:"text",style:{width:"100%",height:"45px"}},null,8,["modelValue"]),t.validationErrors.name?(i(),l("span",F,u(t.validationErrors.name),1)):m("",!0)]),e("div",G,[e("label",L,[c("Pay item code "),n(p,{class:"text-sm"},{default:_(()=>[c("(will be shown on your payroll journal)")]),_:1})]),n(v,{modelValue:t.payItem.code,"onUpdate:modelValue":o[1]||(o[1]=s=>t.payItem.code=s),id:"companyName",optionLabel:"companyName",type:"text",style:{width:"100%",height:"45px"}},null,8,["modelValue"]),t.validationErrors.code?(i(),l("span",W,u(t.validationErrors.code),1)):m("",!0)])])])]),e("div",q,[e("div",z,[e("div",H,[e("div",J,[K,n(f,{modelValue:t.payItem.payment_type,"onUpdate:modelValue":o[2]||(o[2]=s=>t.payItem.payment_type=s),options:t.dropdownValues,optionLabel:"name",placeholder:"Select",style:{width:"100%",height:"45px"}},null,8,["modelValue","options"]),t.validationErrors.payment_type?(i(),l("span",M,u(t.validationErrors.payment_type),1)):m("",!0)])])])]),Q,e("div",R,[e("div",X,[e("div",Y,[n(h,{id:"checkOption1",name:"option",value:"taxable",modelValue:t.payItem.taxable,"onUpdate:modelValue":o[3]||(o[3]=s=>t.payItem.taxable=s)},null,8,["modelValue"]),Z]),n(p,{class:"text-sm ml-4"},{default:_(()=>[c("(We will include this amount in the total sum used to calculate income tax.)")]),_:1})]),e("div",$,[e("div",ee,[n(h,{id:"checkOption2",name:"option",value:"subject_to_national_insurance",modelValue:t.payItem.subject_to_national_insurance,"onUpdate:modelValue":o[4]||(o[4]=s=>t.payItem.subject_to_national_insurance=s)},null,8,["modelValue"]),te]),n(p,{class:"text-sm ml-4"},{default:_(()=>[c("(We will include this amount in the total sum used to calculate national insurance.)")]),_:1})]),e("div",oe,[e("div",se,[n(h,{id:"checkOption2",name:"option",value:"pensionable",modelValue:t.payItem.pensionable,"onUpdate:modelValue":o[5]||(o[5]=s=>t.payItem.pensionable=s)},null,8,["modelValue"]),ae]),n(p,{class:"text-sm ml-4"},{default:_(()=>[c("(We will include this amount in the total sum used to calculate pension contributions.)")]),_:1})])]),ne,n(x,{onClick:o[6]||(o[6]=s=>b.validateData()),label:"Save & Close",class:"ml-2 mb-2"}),n(x,{onClick:o[7]||(o[7]=s=>b.goBack()),label:"Cancel",class:"ml-2 mb-2"})])])}const ce=I(g,[["render",ie]]);export{ce as default};
